---
import Input from '@/components/ui/Input.astro';
import Action from '@/components/ui/Action.astro';
import { checkAuth, getUser } from '@/lib/get-auth';
import Typography from './ui/Typography.astro';

const isAuthenticated = await checkAuth({ cookies: Astro.cookies });
---

<form
  id="snap-link-form"
  class="flex flex-col gap-4"
  method="post"
  action="/api/link"
>
  <Input
    label="Link"
    class="flex-1"
    type="url"
    name="link"
    required
    placeholder="https://example.com"
  />
  <Input
    label="Alias (optional)"
    class="flex-1"
    type="text"
    name="alias"
    placeholder="custom-alias"
  />
  <Input
    id="public-link"
    label="List in public links"
    name="public"
    class="flex-1"
    type="checkbox"
    title={isAuthenticated
      ? ''
      : 'You need to be logged in to make a link public'}
    disabled={!isAuthenticated}
    switch
  />
  <Typography id="snap-link-message" as="p" class="hidden text-red-200" />
  <Typography id="snap-link-url" as="p" class="hidden text-teal-200" />
  <Action as="button" type="submit">Snap link</Action>
</form>
<script>
  import confetti from 'canvas-confetti';

  const form = document.getElementById('snap-link-form') as HTMLFormElement;
  const message = document.getElementById(
    'snap-link-message'
  ) as HTMLButtonElement;
  const url = document.getElementById('snap-link-url') as HTMLButtonElement;

  const handleSubmit = async (e: SubmitEvent) => {
    e.preventDefault();
    const form = e.target as HTMLFormElement;
    const formData = new FormData(form);
    const response = await fetch(form.action, {
      method: form.method,
      body: formData,
    });
    if (!response.ok) {
      message.textContent = await response.text();
      message.classList.remove('hidden');
      return;
    }
    const { title, public: isPublic } = (await response.json()) as {
      title: string;
      public: boolean;
    };

    url.textContent = `Link created. You can access it at `;
    const a = document.createElement('a');
    a.href = `snap-link.vercel.app/l/${title}`;
    a.textContent = `snap-link.vercel.app/l/${title}`;
    a.style.textDecoration = 'underline';
    url.appendChild(a);
    url.classList.remove('hidden');

    if (isPublic) {
      const publicLinks = document.getElementById(
        'public-links'
      ) as HTMLTableRowElement;
      const tr = document.createElement('tr');

      const tdTitle = document.createElement('td');
      tdTitle.textContent = title;
      tdTitle.classList.add('text-center');
      tr.appendChild(tdTitle);

      const tdLink = document.createElement('td');
      const a = document.createElement('a');
      a.href = `snap-link.vercel.app/l/${title}`;
      a.textContent = `snap-link.vercel.app/l/${title}`;
      a.classList.add('underline');
      tdLink.appendChild(a);
      tr.appendChild(tdLink);

      publicLinks.appendChild(tr);
    }

    form.reset();
    confetti();
  };
  form?.addEventListener('submit', handleSubmit);
</script>
